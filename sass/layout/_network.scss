@import "../abstracts/variables";

.network {
  max-width: 120rem;
  padding: 10rem 0rem;

  span {
    color: $color-green;
  }

  h1 {
    padding: 5rem 0;
  }

  &__vectorsContainer {
    position: relative;
    height: 20rem;

    :nth-of-type(1) {
      position: absolute;
      top: 0%;
      left: -8%;
    }

    :nth-of-type(2) {
      position: absolute;
      bottom: 0%;
      right: 23%;
    }

    :nth-of-type(3) {
      position: absolute;
      top: 25%;
      right: -10%;
    }
  }

  &__logoContainer {
    display: grid;
    @include respond(small) {
      grid-template-columns: repeat(2, 1fr);

      :nth-of-type(1) {
        width: calculateSize(3);
        height: calculateSize(3);
      }
      :nth-of-type(2) {
        width: calculateSize(3.5);
        height: calculateSize(3.5);
      }
      :nth-of-type(3) {
        width: calculateSize(2);
        height: calculateSize(2);
      }
      :nth-of-type(4) {
        width: calculateSize(1.5);
        height: calculateSize(1.5);
      }
      :nth-of-type(5) {
        width: calculateSize(2);
        height: calculateSize(2);
      }
      :nth-of-type(6) {
        width: calculateSize(2);
        height: calculateSize(2);
      }
    }
    @include respond(medium) {
      grid-template-columns: repeat(3, 1fr);

      :nth-of-type(1) {
        width: calculateSize(3.5);
        height: calculateSize(3.5);
      }
      :nth-of-type(2) {
        width: calculateSize(4);
        height: calculateSize(4);
      }
      :nth-of-type(3) {
        width: calculateSize(2.5);
        height: calculateSize(2.5);
      }
      :nth-of-type(4) {
        width: calculateSize(1.5);
        height: calculateSize(1.5);
      }
      :nth-of-type(5) {
        width: calculateSize(2.5);
        height: calculateSize(2.5);
      }
      :nth-of-type(6) {
        width: calculateSize(2.5);
        height: calculateSize(2.5);
      }
    }
    @include respond(big) {
      grid-template-columns: repeat(25, 1fr);
      grid-template-rows: repeat(25, 1fr);
      max-height: 30rem;
      column-gap: 4rem;

      :nth-of-type(1) {
        width: calculateSize(4);
        height: calculateSize(4);
        grid-area: 9 / 1 / -1 / 5;
      }
      :nth-of-type(2) {
        width: calculateSize(4.5);
        height: calculateSize(4.5);
        grid-area: 6 / 4 / 12 / 9;
      }
      :nth-of-type(3) {
        width: calculateSize(3);
        height: calculateSize(3);
        grid-area: 8 / 8 / 11 / 12;
      }
      :nth-of-type(4) {
        width: calculateSize(2);
        height: calculateSize(2);
        grid-area: 11 / 9 / 12 / 12;
      }
      :nth-of-type(5) {
        width: calculateSize(2.5);
        height: calculateSize(2.5);
        grid-area: 11 / 11 / 12 / 13;
      }
      :nth-of-type(6) {
        width: calculateSize(2.5);
        height: calculateSize(2.5);
        grid-area: 9 / 12 / 12 / 13;
      }
    }
    @include respond(large) {
      grid-template-columns: repeat(25, 1fr);
      grid-template-rows: repeat(25, 1fr);
      max-height: 30rem;
      column-gap: 4rem;

      :nth-of-type(1) {
        width: calculateSize(4);
        height: calculateSize(4);
        grid-area: 9 / 1 / -1 / 5;
      }
      :nth-of-type(2) {
        width: calculateSize(4.5);
        height: calculateSize(4.5);
        grid-area: 6 / 4 / 12 / 9;
      }
      :nth-of-type(3) {
        width: calculateSize(3);
        height: calculateSize(3);
        grid-area: 8 / 8 / 11 / 12;
      }
      :nth-of-type(4) {
        width: calculateSize(2);
        height: calculateSize(2);
        grid-area: 11 / 9 / 12 / 12;
      }
      :nth-of-type(5) {
        width: calculateSize(2.5);
        height: calculateSize(2.5);
        grid-area: 11 / 11 / 12 / 13;
      }
      :nth-of-type(6) {
        width: calculateSize(2.5);
        height: calculateSize(2.5);
        grid-area: 9 / 12 / 12 / 13;
      }
    }
  }
}
